@model DualGlobe.ERP.Models.QuotationModel

@{
    ViewBag.Title = "Quotation";
}
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Add Quotation
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="@Url.Action("Index", "Quotation")">Quotation</a></li>
        <li class="active">Add Quotation</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <!-- form start -->
    @using (Html.BeginForm("Submit", "Quotation", FormMethod.Post))
    {
        <div class="box box-default">
            <div class="box-body">
                <!-- /.row -->
                <div class="row">
                    <!-- /.col -->
                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => Model.quotationRecord.ClientId, "Client Name") <span class="required">*</span>
                            @Html.DropDownListFor(model => Model.quotationRecord.ClientId, new SelectList(Model.ClientList, "Value", "Text"), "--Select--", new { @id = "ddlClientQuotation", @class = "form-control", @required = "required" })
                            @Html.HiddenFor(model => Model.quotationRecord.ClientId)
                            @Html.HiddenFor(model => Model.quotationRecord.CompanyName)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => Model.quotationRecord.ProjectId, "Project Name") <span class="required">*</span>
                            @if (Model.PageMode == "Edit")
                            {
                                @Html.DropDownListFor(model => Model.quotationRecord.ProjectId, new SelectList(Model.ProjectList, "Value", "Text"), "--Select--", new { @id = "ddlProjectQuotation", @class = "form-control", @required = "required" })
                                @Html.HiddenFor(model => Model.quotationRecord.ProjectId)
                            }
                            else
                            {
                                @Html.DropDownListFor(model => Model.quotationRecord.ProjectId, new SelectList(new List<SelectListItem>(), "Value", "Text"), "--Select--", new { @id = "ddlProjectQuotation", @class = "form-control", @required = "required" })
                            }
                        </div>

                        <div class="form-group">
                            @Html.HiddenFor(model => Model.quotationRecord.Id)
                            @Html.LabelFor(model => Model.quotationRecord.Description, "Description") <span class="required">*</span>
                            @Html.TextAreaFor(model => Model.quotationRecord.Description, new { @id = "txtDescription", @class = "form-control", @required = "required" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => Model.quotationRecord.Subject, "Subject") <span class="required">*</span>
                            @Html.TextBoxFor(model => Model.quotationRecord.Subject, new { @id = "txtSubject", @class = "form-control", @required = "required" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => Model.quotationRecord.Content, "Content") <span class="required">*</span>
                            @Html.TextAreaFor(model => Model.quotationRecord.Content, new { @id = "txtContent", @class = "form-control", @required = "required" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => Model.quotationRecord.Notes, "Notes")
                            @Html.TextAreaFor(model => Model.quotationRecord.Notes, new { @id = "txtNotes", @class = "form-control", @onkeypress = "TextAreaOnKeyChange();" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => Model.quotationRecord.Email, "Email")
                            @Html.TextBoxFor(model => Model.quotationRecord.Email, new { @id = "txtEmail", @class = "form-control" })
                        </div>
                    </div>

                    <!-- /.col -->
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => Model.quotationRecord.ReferenceNumber, "Reference Number")
                            @Html.TextBoxFor(model => Model.quotationRecord.ReferenceNumber, new { @id = "txtRefNumber", @class = "form-control" })
                        </div>

                        @if (Model.PageMode == "Edit")
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => Model.quotationRecord.PONumber, "PO Number")
                                @Html.TextBoxFor(model => Model.quotationRecord.PONumber, new { @id = "txtPONumber", @class = "form-control" })
                            </div>
                        }
                        <div class="form-group">
                            @Html.LabelFor(model => Model.quotationRecord.DateCreated, "Date Created") <span class="required">*</span>
                            @Html.TextBoxFor(model => Model.quotationRecord.DateCreated, new { @Value = Model.quotationRecord != null && Model.quotationRecord.DateCreated.HasValue ? Model.quotationRecord.DateCreated.Value.ToString("yyyy-MM-dd") : "", @id = "txtDateCreated", @class = "form-control  datepicker", @type = "date", @required = "required" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => Model.quotationRecord.ValidUntil, "Valid Until")
                            @Html.TextBoxFor(model => Model.quotationRecord.ValidUntil, new { @Value = Model.quotationRecord != null && Model.quotationRecord.ValidUntil != null ? Model.quotationRecord.ValidUntil.Value.ToString("yyyy-MM-dd") : "", @id = "txtValidUntil", @class = "form-control datepicker", @type = "date" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => Model.quotationRecord.To, "To") <span class="required">*</span>
                            @Html.TextAreaFor(model => Model.quotationRecord.To, new { @id = "txtTo", @class = "form-control", @required = "required" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => Model.quotationRecord.TermsAndCondtions, "Terms & Condtions") <span class="required">*</span>
                            @Html.TextAreaFor(model => Model.quotationRecord.TermsAndCondtions, new { @id = "txtTermsAndCondtions", @class = "form-control", @required = "required" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => Model.quotationRecord.Stage, "Stage") <span class="required">*</span>
                            @if (Model.PageMode == "Edit")
                            {
                                @Html.DropDownListFor(model => Model.quotationRecord.Stage, new SelectList(Model.StatusList, "Value", "Text"), new { @id = "ddlStage", @class = "form-control", @required = "required" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => Model.quotationRecord.Stage, new SelectList(Model.StatusList, "Value", "Text"), new { @id = "ddlStage", @class = "form-control", @required = "required", @readonly = "readonly" })
                            }
                        </div>

                        @*<div class="form-group" type="hidden">
            @Html.LabelFor(model => Model.quotationRecord.GST, "Exclusive GST Value(7%)")
            @Html.TextBoxFor(model => Model.quotationRecord.GST, new { @id = "txtGSTValue", @class = "form-control", @readonly = "readonly" })
        </div>
        <div class="form-group" type="hidden">
            @Html.LabelFor(model => Model.quotationRecord.QuotationValue, "Quotation Value")
            @Html.TextBoxFor(model => Model.quotationRecord.QuotationValue, new { @id = "txtQuotationValue", @class = "form-control", @readonly = "readonly" })
        </div>*@

                        @*<div class="form-group">
                            @Html.HiddenFor(model => Model.quotationRecord.GST, "Exclusive GST Value(7%)")
                            @Html.HiddenFor(model => Model.quotationRecord.GST, new { @id = "txtGSTValue", @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="form-group">
                            @Html.HiddenFor(model => Model.quotationRecord.QuotationValue, "Quotation Value")
                            @Html.HiddenFor(model => Model.quotationRecord.QuotationValue, new { @id = "txtQuotationValue", @class = "form-control", @readonly = "readonly" })
                        </div>*@



                    </div>
                </div>
                <!-- /.row -->
            </div>
        </div>



        <h3>
            Quotation Items
        </h3>
        <div class="box">
            <div class="box-body">
                <table id="quotation-items" class="table table-bordered table-striped">
                    <thead>
                        <tr>

                            @*<th style="width:2%">IH</th>
                                <th style="width:5%">HSO</th>
                                <th style="width:5%">SO</th>*@
                            <th style="width:10%">Quantity</th>
                            <th style="width:38%">Description</th>
                            <th style="width:10%">Unit Price</th>
                            @*<th style="width:10%">GST</th>*@
                            <th style="width:10%">Amount</th>
                            <th style="width:10%">  </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.quotationRecord != null && Model.quotationRecord.quotationItems != null && Model.quotationRecord.quotationItems.Count > 0)
                        {
                            for (int i = 0; i < Model.quotationRecord.quotationItems.Count; i++)
                            {
                                <tr>
                                    @*<td>
                                            @Html.CheckBoxFor(model => Model.quotationRecord.quotationItems[i].IsHeading, new { @class = "restday-checkbox" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(model => Model.quotationRecord.quotationItems[i].HeadingSortOrder, new { @class = "quantity form-control", @required = "required", @onkeypress = "return isNumber(event)" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(model => Model.quotationRecord.quotationItems[i].SortOrder, new { @class = "quantity form-control", @required = "required", @onkeypress = "return isNumber(event)" })
                                        </td>*@
                                    <td>
                                        @Html.HiddenFor(model => Model.quotationRecord.quotationItems[i].Id)
                                        @Html.HiddenFor(model => Model.quotationRecord.quotationItems[i].QuotationId)
                                        @Html.TextBoxFor(model => Model.quotationRecord.quotationItems[i].Quantity, new { @class = "quantity form-control", @required = "required", @onkeypress = "return isNumber(event)" })
                                    </td>
                                    <td>
                                        @Html.TextAreaFor(model => Model.quotationRecord.quotationItems[i].Description, new { @class = "form-control", @required = "required" })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => Model.quotationRecord.quotationItems[i].UnitPrice, new { @class = "unitPrice form-control", @required = "required", @onkeyup = "return isNumeric($(this).val())" })
                                    </td>
                                    @*<td>
                                            @Html.TextBoxFor(model => Model.quotationRecord.quotationItems[i].GST, new { @class = "gst-amount form-control", @readonly = "readonly" })
                                        </td>*@
                                    <td>
                                        @Html.TextBoxFor(model => Model.quotationRecord.quotationItems[i].Amount, new { @class = "amount form-control", @required = "required", @readonly = "readonly" })
                                    </td>
                                    <td><button type="button" data-itemId="@Model.quotationRecord.quotationItems[i].Id" class="btn-link remove-item"><i class="glyphicon glyphicon-remove"></i> Remove</button></td>
                                </tr>
                            }
                        }
                        else
                        {
                            int quotationId = Model.quotationRecord != null ? Model.quotationRecord.Id : 0;
                            <tr>

                                <td>
                                    <input name="quotationRecord.quotationItems[0].QuotationId" type="hidden" value="@quotationId">
                                    <input class="quantity form-control" name="quotationRecord.quotationItems[0].Quantity" required="required" type="text" value="" onkeypress="return isNumber(event)">
                                </td>
                                <td>
                                    <textarea class="form-control" name="quotationRecord.quotationItems[0].Description" required="required"></textarea>
                                </td>
                                <td>
                                    <input class="unitPrice form-control" name="quotationRecord.quotationItems[0].UnitPrice" required="required" type="text" value="" onkeyup="return isNumeric($(this).val())">
                                </td>
                                @*<td>
                                    <input class="gst-amount form-control" name="quotationRecord.quotationItems[0].GST" type="text" value="" readonly="readonly">
                                </td>*@
                                <td>
                                    <input class="amount form-control" name="quotationRecord.quotationItems[0].Amount" required="required" type="text" value="" readonly="readonly">
                                </td>
                                <td><button type="button" class="btn-link remove-item"><i class="glyphicon glyphicon-remove"></i> Remove</button></td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
            <!-- /.box-body -->

        </div>

        <div class="box">
            <div class="box-body">
                <div class="row">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6">
                        <div class="col-md-6">

                            <div class="form-group">
                                @Html.LabelFor(model => Model.quotationRecord.DiscountType, "Discount Type")
                                @Html.DropDownListFor(model => Model.quotationRecord.DiscountType, Model.DiscountTypes, "--Select--", new { @id = "ddlDiscountType", @class = "form-control" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => Model.quotationRecord.DiscountValue, "Discount Value")
                                @Html.TextBoxFor(model => Model.quotationRecord.DiscountValue, new { @id = "txtDiscountVal", @class = "form-control" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => Model.quotationRecord.GSTType, "GST Type") <span class="required">*</span>
                                @Html.DropDownListFor(model => Model.quotationRecord.GSTType, Model.GSTStatus, new { @id = "ddlGSTStatus", @class = "form-control", @required = "required" })
                            </div>

                        </div>
                        <div class="col-md-6">
                            <table id="quotation-Summary" class="table table-bordered table-striped">
                                <tbody>
                                    <tr>
                                        <td>
                                            SubTotal (S$):
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(model => model.quotationRecord.SubTotal, new { @id= "txtSubTotal", @class = "form-control", @readonly="readonly" })
                                            @*<input id="txtSubTotal" value="@Model.quotationRecord.SubTotal" class="form-control" readonly="readonly"/>*@
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            Discount (S$):
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(model => model.quotationRecord.DiscountAmount, new { @id= "txtDiscountAmount", @class = "form-control", @readonly="readonly" })
                                            @*<input id="txtDiscountAmount" value="@Model.quotationRecord.DiscountAmount" class="form-control" readonly="readonly"/>*@
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            Actual Amount (S$):
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(model => model.quotationRecord.ActualAmount, new { @id = "txtActualAmount", @class = "form-control", @readonly = "readonly" })
                                            @*<input id="txtActualAmount" value="@Model.quotationRecord.ActualAmount" class="form-control" readonly="readonly" />*@
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            GST:<br/>(9% from 1st Jan 2024, 8% until 31st Dec 2023) (S$)
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(model => model.quotationRecord.GST, new { @id = "txtGstAmount", @class = "form-control", @readonly = "readonly", @name = "GST" })
                                            @*<input id="txtGstAmount" class="form-control" readonly="readonly"/>*@
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            Total (S$):
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(model => model.quotationRecord.QuotationValue, new { @id = "txtNetTotal", @class = "form-control", @readonly = "readonly", @name= "QuotationValue" })
                                            @*<input id="txtNetTotal" value="@Model.quotationRecord.QuotationValue" class="form-control" readonly="readonly" />*@
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.box-body -->
        </div>

        <!-- /.box -->
        <div class="box-footer">
            <a href="@Url.Action("Index", "Quotation")" class="btn btn-primary">Back</a>

            @if (Model.quotationRecord != null)
            {
                <button type="button" id="quotationDetails" data-id="@Model.quotationRecord.Id" class="btn btn-primary">View Quotation</button>

                <a href="@Url.Action("PrintQuotation","Quotation", new { @id = Model.quotationRecord.Id})" target="_blank" class="btn btn-primary"><i class="fa fa-print"></i> Print Quotation</a>

            }

            <button type="button" class="btn-link add-item"><i class="glyphicon glyphicon-plus"></i> Add</button>

            @if ((Model.quotationRecord == null || !Model.quotationRecord.DateCreated.HasValue) || (Model.quotationRecord != null && Model.PageMode == "Edit" && Model.quotationRecord.Stage != "Confirmed"))
            {
                <button type="submit" class="btn btn-primary pull-right">Submit</button>
            }
        </div>
    }
</section>
<!-- /.content -->

<div id='quotationModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content" style="width: 800px;">
            <div id='quotationModalContent'></div>
        </div>
    </div>
</div>
