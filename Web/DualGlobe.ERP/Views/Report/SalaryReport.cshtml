@using DualGlobe.ERP.Utility;
@model DualGlobe.ERP.Models.EmployeeModel

@{
    ViewBag.Title = "Salary Report";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Salary Report
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Salary Report</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div class="box">
        <div class="box-body">
            @using (Html.BeginForm("SalaryReport", "Report", FormMethod.Post))
            {
                <div class="row">
                    <div class="col-xs-1">
                        <div class="form-group">
                            @Html.Label("StartDate: ") <span class="required">*</span>
                        </div>
                    </div>
                    <div class="col-xs-2">
                        <div class="form-group">
                            @Html.TextBoxFor(model => Model.StartDate, new { @Value = Model.StartDate != null ? Model.StartDate.Value.ToString("yyyy-MM-dd") : "", @id = "startDate", @class = "form-control datepicker", @type = "date", @required = "required" })
                        </div>
                    </div>
                    <div class="col-xs-1">
                        <div class="form-group">
                            @Html.Label("EndDate: ") <span class="required">*</span>
                        </div>
                    </div>
                    <div class="col-xs-2">
                        <div class="form-group">
                            @Html.TextBoxFor(model => Model.EndDate, new { @Value = Model.EndDate != null ? Model.EndDate.Value.ToString("yyyy-MM-dd") : "", @id = "endDate", @class = "form-control datepicker", type = "date", @required = "required" })
                        </div>
                    </div>
                    <div class="col-xs-2">
                        <div class="form-group">
                            @Html.Label("Filter By Work Status ")
                        </div>
                    </div>
                    <div class="col-xs-2">
                        <div class="form-group">
                            @Html.DropDownListFor(model => Model.WorkStatus, Model.EmployeeStatusList, "All", new { @id = "ddlWorkStatus", @class = "form-control" })
                        </div>
                    </div>

                    <div class="col-xs-2">
                        <button type="submit" class="btn btn-primary pull-right">Search</button>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-body">
                    <table id="tblClient" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Seriol No</th>
                                <th>Employee Id</th>
                                <th>Employee Name</th>
                                <th>Work Status</th>
                                <th>Basic Salary</th>
                                <th>Fixed Allowance</th>
                                @*<th>Other Allowance</th>*@
                                <th>Bonous Allowance</th>
                                <th>Incentive Allowance</th>
                                <th>Total Deduction</th>
                                <th>Net Salary</th>
                                <th>Payment Status</th>
                            </tr>
                        </thead>

                        @if (Model.SalaryArray != null)
                        {
                            <tbody>
                                @{
                                    int i = 0;
                                    foreach (var item in Model.SalaryArray)
                                    {
                                        <tr>
                                            <td>@(++i)</td>
                                            <td>@System.Configuration.ConfigurationManager.AppSettings["EmployeeIdPrefix"]@item.EmployeeId</td>
                                            <td>@item.EmployeeName</td>
                                            <td>@item.WorkStatus</td>
                                            <td>S$@String.Format("{0:n}", item.BasicSalary)</td>
                                            <td style="text-align:right;">S$@String.Format("{0:n}", item.FixedAllowance.Value)</td>
                                            @*<td>S$@item.OtherAllowance.Value</td>*@
                                            <td style="text-align:right;">S$@String.Format("{0:n}", item.BonusAllowance.Value)</td>
                                            <td style="text-align:right;">S$@String.Format("{0:n}", item.IncentiveAllowance.GetValueOrDefault(0))</td>
                                            <td style="text-align:right;">S$@String.Format("{0:n}", item.TotalDetectSalary.Value)</td>
                                            <td style="text-align:right;">S$@String.Format("{0:n}", item.GrossSalary)</td>
                                            <td>@item.Status</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td><b>Total</b></td>
                                    <td style="text-align:right;">S$@String.Format("{0:n}", Model.SalaryArray.AsEnumerable().Sum(j => j.BasicSalary))</td>
                                    <td style="text-align:right;">S$@String.Format("{0:n}", Model.SalaryArray.AsEnumerable().Sum(j => j.FixedAllowance.Value))</td>
                                    @*<td>S$@Model.SalaryArray.AsEnumerable().Sum(j => j.OtherAllowance.Value)</td>*@
                                    <td style="text-align:right;">S$@String.Format("{0:n}", Model.SalaryArray.AsEnumerable().Sum(j => j.BonusAllowance.Value))</td>
                                    <td style="text-align:right;">S$@String.Format("{0:n}", Model.SalaryArray.AsEnumerable().Sum(j => j.IncentiveAllowance.GetValueOrDefault(0)))</td>
                                    <td style="text-align:right;">S$@String.Format("{0:n}", Model.SalaryArray.AsEnumerable().Sum(j => j.TotalDetectSalary.Value))</td>
                                    <td style="text-align:right;">S$@String.Format("{0:n}", Model.SalaryArray.AsEnumerable().Sum(j => j.GrossSalary))</td>
                                    <td></td>
                                </tr>
                            </tfoot>
                        }
                    </table>

                </div>
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
    </div>

    <div class="row">
        <div class="col-xs-6">
            <div class="box">
                @if (Model.SalaryArray != null)
                {
                    <div class="box-body">
                        <table class="table table-bordered table-striped">
                            <tbody>
                                @{
                                    <tr>
                                        <th>Paid Amount</th>
                                        <td>S$@String.Format("{0:n}", Model.SalaryArray.AsEnumerable().Where(s => s.Status.ToLowerInvariant() == "paid").Sum(j => j.GrossSalary))</td>
                                    </tr>
                                    <tr>
                                        <th>Unpaid Amount</th>
                                        <td>S$@String.Format("{0:n}", Model.SalaryArray.AsEnumerable().Where(s => s.Status.ToLowerInvariant() == "unpaid").Sum(j => j.GrossSalary))</td>
                                    </tr>
                                    <tr>
                                        <th>Outstanding Amount</th>
                                        <td>S$@String.Format("{0:n}", Model.SalaryArray.AsEnumerable().Where(s => s.Status.ToLowerInvariant() == "outstanding").Sum(j => j.GrossSalary))</td>
                                    </tr>

                                }
                            </tbody>

                        </table>
                    </div>

                    <div class="box-footer">
                        <a href="@Url.Action("PrintSalaryReport", "Report", new { @startDate = Model.StartDate, @endDate = Model.EndDate, @workStatus = Model.WorkStatus })" target="_blank" class="btn btn-primary"><i class="fa fa-print"></i> Print Report</a>
                    </div>
                }
            </div>
            <!-- /.row -->
        </div>
        <!-- /.box -->
    </div>
    <!-- /.col -->
</section>

<!-- /.content -->